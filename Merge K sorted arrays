import java.util.*;
public class Main
{
    public static ArrayList<Integer> mergeKArrays(int[][] arr,int K) 
    {
        ArrayList<Integer> result = new ArrayList<>();
        PriorityQueue<int[]> minHeap = new PriorityQueue<>((a, b) -> a[0] - b[0]);
        for (int i = 0; i < K; i++) {
            minHeap.offer(new int[]{arr[i][0], i, 0});
        }
        while (!minHeap.isEmpty()) {
            int[] curr = minHeap.poll();
            int value = curr[0];
            int arrayIndex = curr[1];
            int elementIndex = curr[2];
            result.add(value);
            if (elementIndex + 1 < K) {
                minHeap.offer(new int[]{arr[arrayIndex][elementIndex + 1], arrayIndex, elementIndex + 1});
            }
        }
        return result;

    }
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int K=sc.nextInt();
		int[][] arr=new int[K][K];
		for(int i=0;i<K;i++){
		    for(int j=0;j<K;j++){
		        arr[i][j]=sc.nextInt();
		    }
		}
		ArrayList<Integer> res=mergeKArrays(arr,K);
		System.out.print(res);
	}
}
